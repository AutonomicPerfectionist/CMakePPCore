include_guard()
include(cmakepp_core/map/copy)
include(cmakepp_core/map/equal)
include(cmakepp_core/utilities/global)
include(cmakepp_core/utilities/return)
include(cmakepp_core/utilities/unique_id)

function(cpp_map_append _ma_this _ma_key _ma_value)
    cpp_append_global("${_ma_this}_keys" "${_ma_key}")
    cpp_append_global("${_ma_this}_${_ma_key}" "${_ma_value}")
endfunction()

function(cpp_map_ctor _mc_result)
    cpp_unique_id("${_mc_result}")
    cpp_set_global("${${_mc_result}}__type" map)

    if("${ARGC}" GREATER 1)
        cpp_map_set("${${_mc_result}}" ${ARGN})
    endif()

    cpp_return("${_mc_result}")
endfunction()

function(cpp_map_get _mg_this _mg_value _mg_key)
    cpp_get_global("${_mg_value}" "${_mg_this}_${_mg_key}")
    cpp_return("${_mg_value}")
endfunction()

function(cpp_map_has_key _mhk_this _mhk_result _mhk_key)
    cpp_map_keys("${_mhk_this}" _mhk_keys)
    cpp_sanitize_string(_mhk_key "${_mhk_key}")
    list(FIND _mhk_keys "${_mhk_key}" _mhk_index)
    if("${_mhk_index}" GREATER -1)
        set("${_mhk_result}" TRUE PARENT_SCOPE)
    else()
        set("${_mhk_result}" FALSE PARENT_SCOPE)
    endif()
endfunction()

function(cpp_map_keys _mk_this _mk_keys)
    cpp_get_global("${_mk_keys}" "${_mk_this}_keys")
    list(REMOVE_DUPLICATES "${_mk_keys}")
    cpp_return("${_mk_keys}")
endfunction()

function(cpp_map_set _ms_this _ms_key _ms_value)
    cpp_append_global("${_ms_this}_keys" "${_ms_key}")
    cpp_set_global("${_ms_this}_${_ms_key}" "${_ms_value}")

    if("${ARGC}" GREATER 3)
        cpp_map_set("${_ms_this}" ${ARGN})
    endif()
endfunction()

function(cpp_map _m_mode _m_this)
    string(TOLOWER "${_m_mode}" _m_lc_mode)

    if("${_m_lc_mode}" STREQUAL "append")
        cpp_map_append("${_m_this}" "${ARGV2}" "${ARGV3}")
    elseif("${_m_lc_mode}" STREQUAL "copy")
        cpp_map_copy("${_m_this}" "${ARGV2}")
        cpp_return("${ARGV2}")
    elseif("${_m_lc_mode}" STREQUAL "ctor")
        cpp_map_ctor("${_m_this}" ${ARGN})
        cpp_return("${_m_this}")
    elseif("${_m_lc_mode}" STREQUAL "equal")
        cpp_map_equal("${_m_this}" "${ARGV2}" "${ARGV3}")
        cpp_return("${ARGV2}")
    elseif("${_m_lc_mode}" STREQUAL "get")
        cpp_map_get("${_m_this}" "${ARGV2}" "${ARGV3}")
        cpp_return("${ARGV2}")
    elseif("${_m_lc_mode}" STREQUAL "has_key")
        cpp_map_has_key("${_m_this}" "${ARGV2}" "${ARGV3}")
        cpp_return("${ARGV2}")
    elseif("${_m_lc_mode}" STREQUAL "keys")
        cpp_map_keys("${_m_this}" "${ARGV2}" "${ARGV3}")
        cpp_return("${ARGV2}")
    elseif("${_m_lc_mode}" STREQUAL "set")
        cpp_map_set("${_m_this}" "${ARGV2}" "${ARGV3}")
    else()
        message(
            FATAL_ERROR "Map member function map::${_m_lc_mode} does not exist"
        )
    endif()
endfunction()



include_guard()
include(cmakepp_core/array/array)
include(cmakepp_core/map/map)
include(cmakepp_core/types/get_type)
include(cmakepp_core/utilities/return)

function(cpp_make_iterator _cmi_result _cmi_obj)
    cpp_get_type(_cmi_type "${_cmi_obj}")

    if("${_cmi_type}" STREQUAL "list")
        list(LENGTH _cmi_obj _cmi_n)
        if("${_cmi_n}" EQUAL 0)
            set("${_cmi_result}" FALSE)
        endif()

        cpp_array(CTOR _cmi_obj ${_cmi_obj})
        cpp_make_iterator("${_cmi_result}" "${_cmi_obj}")
    else()
        cpp_map(CTOR "${_cmi_result}")
        cpp_map(SET "${${_cmi_result}}" type "${_cmi_type}")
        cpp_map(SET "${${_cmi_result}}" elem 0)
        cpp_map(SET "${${_cmi_result}}" value "${_cmi_obj}")
    endif()

    cpp_return("${_cmi_result}")
endfunction()

function(cpp_iterator_get _cig_result _cig_itr)
    cpp_map(GET _cig_type "${${_cig_itr}}" type)
    cpp_map(GET _cig_elem "${${_cig_itr}}" elem)
    cpp_map(GET _cig_value "${${_cig_itr}}" value)

    if("${_cig_type}" STREQUAL "array")
        cpp_array(GET "${_cig_result}" "${_cig_value}" "${_cig_elem}")
        cpp_array(LENGTH _cig_n "${_cig_value}")
        math(EXPR _cig_elem "${_cig_elem} + 1")
        message("${_cig_value} ${_cig_elem} ${_cig_n}")
        if("${_cig_elem}" EQUAL "${_cig_n}")
            set("${_cig_itr}" FALSE PARENT_SCOPE)
        else()
            cpp_map(SET "${${_cig_itr}}" elem "${_cig_elem}")
        endif()
    endif()
    cpp_return("${_cig_result}")
endfunction()

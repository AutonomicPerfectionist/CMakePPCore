include(cmake_test/cmake_test)

ct_add_test("cpp_tuple_iterator_size")
    include(cmakepp_core/utilities/tuple_iterator)
    ct_add_section("No elements")
        cpp_tuple_iterator_size(result 4 0)
        ct_assert_equal(result -1)
    ct_end_section()

    ct_add_section("10 elements by 1s")
        cpp_tuple_iterator_size(result 10 1)
        ct_assert_equal(result 9)
    ct_end_section()

    ct_add_section("10 elements by 2s")
        cpp_tuple_iterator_size(result 10 2)
        ct_assert_equal(result 4)
    ct_end_section()

    ct_add_section("10 elements by 5s")
        cpp_tuple_iterator_size(result 10 5)
        ct_assert_equal(result 1)
    ct_end_section()

    ct_add_section("Type check")
        set(CMAKEPP_CORE_DEBUG_MODE ON)
        cpp_tuple_iterator_size(result TRUE 1)
        ct_assert_fails_as("Assertion: TRUE is int")
    ct_end_section()

    ct_add_section("Fails if not divisible")
        set(CMAKEPP_CORE_DEBUG_MODE ON)
        cpp_tuple_iterator_size(result 4 3)
        ct_assert_fails_as("Assertion: 4 % 3 == 0")
    ct_end_section()

    ct_add_section("Fails if m > n")
        set(CMAKEPP_CORE_DEBUG_MODE ON)
        cpp_tuple_iterator_size(result 3 4)
        ct_assert_fails_as("Assertion: 3 >= 4")
    ct_end_section()
ct_end_test()

ct_add_test("cpp_tuple_iterator")
    include(cmakepp_core/utilities/tuple_iterator)
    ct_add_section("3 elements, 1 at a time")
        ct_add_section("0-th element")
            cpp_tuple_iterator(0 1 result a b c)
            ct_assert_equal(result a)
        ct_end_section()

        ct_add_section("1-st element")
            cpp_tuple_iterator(1 1 result a b c)
            ct_assert_equal(result b)
        ct_end_section()

        ct_add_section("2nd element")
            cpp_tuple_iterator(2 1 result a b c)
            ct_assert_equal(result c)
        ct_end_section()
    ct_end_section()

    ct_add_section("6 elements, 2 at a time")
        ct_add_section("0-th tuple")
            cpp_tuple_iterator(0 2 result1 result2 a b c d e f)
            ct_assert_equal(result1 a)
            ct_assert_equal(result2 b)
        ct_end_section()

        ct_add_section("2nd tuple")
            cpp_tuple_iterator(1 2 result1 result2 a b c d e f)
            ct_assert_equal(result1 c)
            ct_assert_equal(result2 d)
        ct_end_section()

        ct_add_section("3rd tuple")
            cpp_tuple_iterator(2 2 result1 result2 a b c d e f)
            ct_assert_equal(result1 e)
            ct_assert_equal(result2 f)
        ct_end_section()
    ct_end_section()

    ct_add_section("9 elements, 3 at a time")
        ct_add_section("0-th tuple")
            cpp_tuple_iterator(0 3 result1 result2 result3 a b c d e f g h i)
            ct_assert_equal(result1 a)
            ct_assert_equal(result2 b)
            ct_assert_equal(result3 c)
        ct_end_section()

        ct_add_section("2nd tuple")
            cpp_tuple_iterator(1 3 result1 result2 result3 a b c d e f g h i)
            ct_assert_equal(result1 d)
            ct_assert_equal(result2 e)
            ct_assert_equal(result3 f)
        ct_end_section()

        ct_add_section("3rd tuple")
            cpp_tuple_iterator(2 3 result1 result2 result3 a b c d e f g h i)
            ct_assert_equal(result1 g)
            ct_assert_equal(result2 h)
            ct_assert_equal(result3 i)
        ct_end_section()
    ct_end_section()
ct_end_test()

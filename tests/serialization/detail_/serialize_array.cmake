include(cmake_test/cmake_test)

ct_add_test("_cpp_serialize_array")
    include(cmakepp_core/serialization/detail_/serialize_array)

    ct_add_section("empty array")
        cpp_array(CTOR an_array)
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ ] }]])
    ct_end_section()

    ct_add_section("one-item array")
        cpp_array(CTOR an_array hello)
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ "hello" ] }]])
    ct_end_section()

    ct_add_section("two-item array")
        cpp_array(CTOR an_array hello world)
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ "hello" , "world" ] }]])
    ct_end_section()

    ct_add_section("Array with a map")
        include(cmakepp_core/map/map)
        cpp_map(CTOR a_map)
        cpp_array(CTOR an_array "${a_map}")
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ { } ] }]])
    ct_end_section()

    ct_add_section("Array with a list")
        cpp_array(CTOR an_array [[hello\\\\\\\\;world]])
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ [ "hello" , "world" ] ] }]])
    ct_end_section()

    ct_add_section("Array with an array")
        cpp_array(CTOR sub_array)
        cpp_array(CTOR an_array "${sub_array}")
        _cpp_serialize_array(result "${an_array}")
        ct_assert_equal(result [[{ "array" : [ { "array" : [ ] } ] }]])
    ct_end_section()
ct_end_test()

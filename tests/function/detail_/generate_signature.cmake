include(cmake_test/cmake_test)

ct_add_test("_cpp_generate_signature")
    include(cmakepp_core/algorithm/equal)
    include(cmakepp_core/function/detail_/generate_signature)

    ct_add_section("Signature")
        set(CMAKEPP_CORE_DEBUG_MODE ON)

        ct_add_section("Arg1 must be a desc")
            _cpp_generate_signature(TRUE result)
            ct_assert_fails_as("Assertion: TRUE is desc")
        ct_end_section()

        ct_add_section("Arg2 must be a desc")
            _cpp_generate_signature(result TRUE)
            ct_assert_fails_as("Assertion: TRUE is desc")
        ct_end_section()
    ct_end_section()

    ct_add_section("No args")
        _cpp_generate_signature(result a_fxn)
        set(corr "macro(a_fxn)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Only *args")
        _cpp_generate_signature(result a_fxn args)
        set(corr "macro(a_fxn)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("One arg")
        _cpp_generate_signature(result a_fxn int)
        set(corr "macro(a_fxn __cpp_fxn_arg_0__)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("One arg and *args")
        _cpp_generate_signature(result a_fxn int args)
        set(corr "macro(a_fxn __cpp_fxn_arg_0__)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Two args")
        _cpp_generate_signature(result a_fxn int bool)
        set(corr "macro(a_fxn __cpp_fxn_arg_0__ __cpp_fxn_arg_1__)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Two args and *args")
        _cpp_generate_signature(result a_fxn int bool args)
        set(corr "macro(a_fxn __cpp_fxn_arg_0__ __cpp_fxn_arg_1__)")
        cpp_equal(test_passed "${result}" "${corr}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()
ct_end_test()

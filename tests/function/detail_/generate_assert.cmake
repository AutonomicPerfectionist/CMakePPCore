include(cmake_test/cmake_test)

ct_add_test("_cpp_generate_assert")
    include(cmakepp_core/algorithm/equal)
    include(cmakepp_core/function/detail_/generate_assert)

    ct_add_section("Signature")
        set(CMAKEPP_CORE_DEBUG_MODE ON)

        ct_add_section("Fails if arg 1 is not a desc")
            _cpp_generate_assert(TRUE)
            ct_assert_fails_as("Assertion: TRUE is desc")
        ct_end_section()
    ct_end_section()

    ct_add_section("No args")
        _cpp_generate_assert(result)
        set(corr [[cpp_assert_signature("${ARGV}")]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Only *args")
        _cpp_generate_assert(result args)
        set(corr [[cpp_assert_signature("${ARGV}" args)]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("One arg")
        _cpp_generate_assert(result int)
        set(corr [[cpp_assert_signature("${ARGV}" int)]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("One arg and *args")
        _cpp_generate_assert(result int args)
        set(corr [[cpp_assert_signature("${ARGV}" int args)]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Two args")
        _cpp_generate_assert(result int bool)
        set(corr [[cpp_assert_signature("${ARGV}" int bool)]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()

    ct_add_section("Two args and *args")
        _cpp_generate_assert(result int bool args)
        set(corr [[cpp_assert_signature("${ARGV}" int bool args)]])
        cpp_equal(test_passed "${corr}" "${result}")
        ct_assert_equal(test_passed TRUE)
    ct_end_section()
ct_end_test()

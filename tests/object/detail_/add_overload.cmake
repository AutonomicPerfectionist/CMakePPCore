include(cmake_test/cmake_test)

ct_add_test("_cpp_object_add_overload")
    include(cmakepp_core/algorithm/equal)
    include(cmakepp_core/object/detail_/add_overload)
    include(cmakepp_core/object/detail_/ctor)
    include(cmakepp_core/object/detail_/get_overloads)

    _cpp_object_ctor(an_object)

    ct_add_section("Signature")
        set(CMAKEPP_CORE_DEBUG_MODE ON)

        ct_add_section("Arg1 must be obj")
            _cpp_object_add_overload(TRUE a_fxn)
            ct_assert_fails_as("Assertion: TRUE is obj")
        ct_end_section()

        ct_add_section("Arg2 must be desc")
            _cpp_object_add_overload("${an_object}" TRUE)
            ct_assert_fails_as("Assertion: TRUE is desc")
        ct_end_section()
    ct_end_section()

    ct_add_section("non-existing overload with 0 args")
        _cpp_object_add_overload("${an_object}" a_fxn)
        _cpp_object_get_overloads(overloads "${an_object}" a_fxn)
        cpp_array(CTOR key)
        _cpp_mangle_fxn(mangled_name a_fxn obj)
        cpp_map(CTOR corr "${key}" "${mangled_name}")
        cpp_equal(is_same "${corr}" "${overloads}")
        ct_assert_equal(is_same TRUE)
    ct_end_section()

    ct_add_section("non-existing overload with 1 arg")
        _cpp_object_add_overload("${an_object}" a_fxn int)
        _cpp_object_get_overloads(overloads "${an_object}" a_fxn)
        cpp_array(CTOR key int)
        _cpp_mangle_fxn(mangled_name a_fxn obj int)
        cpp_map(CTOR corr "${key}" "${mangled_name}")
        cpp_equal(is_same "${corr}" "${overloads}")
        ct_assert_equal(is_same TRUE)
    ct_end_section()

    ct_add_section("non-existing overload with 2 args")
        _cpp_object_add_overload("${an_object}" a_fxn int bool)
        _cpp_object_get_overloads(overloads "${an_object}" a_fxn)
        cpp_array(CTOR key int bool)
        _cpp_mangle_fxn(mangled_name a_fxn obj int bool)
        cpp_map(CTOR corr "${key}" "${mangled_name}")
        cpp_equal(is_same "${corr}" "${overloads}")
        ct_assert_equal(is_same TRUE)
    ct_end_section()
ct_end_test()

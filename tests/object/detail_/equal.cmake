include(cmake_test/cmake_test)

ct_add_test("_cpp_object_equal")
    include(cmakepp_core/object/detail_/add_base)
    include(cmakepp_core/object/detail_/add_function)
    include(cmakepp_core/object/detail_/ctor)
    include(cmakepp_core/object/detail_/equal)
    include(cmakepp_core/object/detail_/set_attr)

    ct_add_section("Default Object")
        _cpp_object_ctor(an_object)

        ct_add_section("Same object")
            _cpp_object_ctor(an_object)
            _cpp_object_equal("${an_object}" result "${an_object}")
            ct_assert_equal(result TRUE)
        ct_end_section()

        ct_add_section("Different, but also default object")
            _cpp_object_ctor(another_object)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result TRUE)
        ct_end_section()
    ct_end_section()

    ct_add_section("Non-default object")
        _cpp_object_ctor(an_object)
        _cpp_object_add_function("${an_object}" a_fxn an_object)
        _cpp_object_set_attr("${an_object}" foo bar)
        _cpp_object_add_base("${an_object}" a_base)

        ct_add_section("Same object")
            _cpp_object_equal("${an_object}" result "${an_object}")
            ct_assert_equal(result TRUE)
        ct_end_section()

        ct_add_section("Same state, but different object")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" a_fxn an_object)
            _cpp_object_set_attr("${another_object}" foo bar)
            _cpp_object_add_base("${another_object}" a_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result TRUE)
        ct_end_section()

        ct_add_section("Function comes from different base class")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" a_fxn another_object)
            _cpp_object_set_attr("${another_object}" foo bar)
            _cpp_object_add_base("${another_object}" a_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result FALSE)
        ct_end_section()

        ct_add_section("Different functions")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" another_fxn an_object)
            _cpp_object_set_attr("${another_object}" foo bar)
            _cpp_object_add_base("${another_object}" a_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result FALSE)
        ct_end_section()


        ct_add_section("Different attribute value")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" a_fxn an_object)
            _cpp_object_set_attr("${another_object}" foo 42)
            _cpp_object_add_base("${another_object}" a_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result FALSE)
        ct_end_section()

        ct_add_section("Different attributes")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" a_fxn an_object)
            _cpp_object_set_attr("${another_object}" bar foo)
            _cpp_object_add_base("${another_object}" a_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result FALSE)
        ct_end_section()

        ct_add_section("Different base classes")
            _cpp_object_ctor(another_object)
            _cpp_object_add_function("${another_object}" a_fxn an_object)
            _cpp_object_set_attr("${another_object}" foo bar)
            _cpp_object_add_base("${another_object}" another_base)
            _cpp_object_equal("${an_object}" result "${another_object}")
            ct_assert_equal(result FALSE)
        ct_end_section()
    ct_end_section()
ct_end_test()
